// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package eventforwarder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomStatus_RoomStatusType int32

const (
	RoomStatus_ready       RoomStatus_RoomStatusType = 0
	RoomStatus_occupied    RoomStatus_RoomStatusType = 1
	RoomStatus_terminating RoomStatus_RoomStatusType = 2
	RoomStatus_terminated  RoomStatus_RoomStatusType = 3
)

var RoomStatus_RoomStatusType_name = map[int32]string{
	0: "ready",
	1: "occupied",
	2: "terminating",
	3: "terminated",
}
var RoomStatus_RoomStatusType_value = map[string]int32{
	"ready":       0,
	"occupied":    1,
	"terminating": 2,
	"terminated":  3,
}

func (x RoomStatus_RoomStatusType) String() string {
	return proto.EnumName(RoomStatus_RoomStatusType_name, int32(x))
}
func (RoomStatus_RoomStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{1, 0}
}

type PlayerEvent_PlayerEventType int32

const (
	PlayerEvent_PLAYER_JOINED PlayerEvent_PlayerEventType = 0
	PlayerEvent_PLAYER_LEFT   PlayerEvent_PlayerEventType = 1
)

var PlayerEvent_PlayerEventType_name = map[int32]string{
	0: "PLAYER_JOINED",
	1: "PLAYER_LEFT",
}
var PlayerEvent_PlayerEventType_value = map[string]int32{
	"PLAYER_JOINED": 0,
	"PLAYER_LEFT":   1,
}

func (x PlayerEvent_PlayerEventType) String() string {
	return proto.EnumName(PlayerEvent_PlayerEventType_name, int32(x))
}
func (PlayerEvent_PlayerEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{3, 0}
}

type RoomEvent struct {
	Room                 *Room             `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	EventType            string            `protobuf:"bytes,2,opt,name=eventType,proto3" json:"eventType,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RoomEvent) Reset()         { *m = RoomEvent{} }
func (m *RoomEvent) String() string { return proto.CompactTextString(m) }
func (*RoomEvent) ProtoMessage()    {}
func (*RoomEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{0}
}
func (m *RoomEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomEvent.Unmarshal(m, b)
}
func (m *RoomEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomEvent.Marshal(b, m, deterministic)
}
func (dst *RoomEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomEvent.Merge(dst, src)
}
func (m *RoomEvent) XXX_Size() int {
	return xxx_messageInfo_RoomEvent.Size(m)
}
func (m *RoomEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RoomEvent proto.InternalMessageInfo

func (m *RoomEvent) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *RoomEvent) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *RoomEvent) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type RoomStatus struct {
	Room                 *Room                     `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	StatusType           RoomStatus_RoomStatusType `protobuf:"varint,2,opt,name=statusType,proto3,enum=eventforwarder.RoomStatus_RoomStatusType" json:"statusType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RoomStatus) Reset()         { *m = RoomStatus{} }
func (m *RoomStatus) String() string { return proto.CompactTextString(m) }
func (*RoomStatus) ProtoMessage()    {}
func (*RoomStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{1}
}
func (m *RoomStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomStatus.Unmarshal(m, b)
}
func (m *RoomStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomStatus.Marshal(b, m, deterministic)
}
func (dst *RoomStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomStatus.Merge(dst, src)
}
func (m *RoomStatus) XXX_Size() int {
	return xxx_messageInfo_RoomStatus.Size(m)
}
func (m *RoomStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RoomStatus proto.InternalMessageInfo

func (m *RoomStatus) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *RoomStatus) GetStatusType() RoomStatus_RoomStatusType {
	if m != nil {
		return m.StatusType
	}
	return RoomStatus_ready
}

type Room struct {
	Game                 string            `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	RoomId               string            `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Host                 string            `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32             `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RoomType             string            `protobuf:"bytes,7,opt,name=roomType,proto3" json:"roomType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{2}
}
func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (dst *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(dst, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *Room) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Room) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Room) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Room) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Room) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

type PlayerEvent struct {
	PlayerId             string                      `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Room                 *Room                       `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	EventType            PlayerEvent_PlayerEventType `protobuf:"varint,3,opt,name=eventType,proto3,enum=eventforwarder.PlayerEvent_PlayerEventType" json:"eventType,omitempty"`
	Metadata             map[string]string           `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *PlayerEvent) Reset()         { *m = PlayerEvent{} }
func (m *PlayerEvent) String() string { return proto.CompactTextString(m) }
func (*PlayerEvent) ProtoMessage()    {}
func (*PlayerEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{3}
}
func (m *PlayerEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerEvent.Unmarshal(m, b)
}
func (m *PlayerEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerEvent.Marshal(b, m, deterministic)
}
func (dst *PlayerEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerEvent.Merge(dst, src)
}
func (m *PlayerEvent) XXX_Size() int {
	return xxx_messageInfo_PlayerEvent.Size(m)
}
func (m *PlayerEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerEvent proto.InternalMessageInfo

func (m *PlayerEvent) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerEvent) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *PlayerEvent) GetEventType() PlayerEvent_PlayerEventType {
	if m != nil {
		return m.EventType
	}
	return PlayerEvent_PLAYER_JOINED
}

func (m *PlayerEvent) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type RoomInfo struct {
	RoomType               string            `protobuf:"bytes,1,opt,name=roomType,proto3" json:"roomType,omitempty"`
	Game                   string            `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	NumberOfTeams          int32             `protobuf:"varint,3,opt,name=numberOfTeams,proto3" json:"numberOfTeams,omitempty"`
	PlayersPerTeam         int32             `protobuf:"varint,4,opt,name=playersPerTeam,proto3" json:"playersPerTeam,omitempty"`
	MinimumNumberOfPlayers int32             `protobuf:"varint,5,opt,name=minimumNumberOfPlayers,proto3" json:"minimumNumberOfPlayers,omitempty"`
	MatchmakingScript      string            `protobuf:"bytes,6,opt,name=matchmakingScript,proto3" json:"matchmakingScript,omitempty"`
	WebhookUrl             string            `protobuf:"bytes,7,opt,name=webhookUrl,proto3" json:"webhookUrl,omitempty"`
	Metadata               map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags                   map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral   struct{}          `json:"-"`
	XXX_unrecognized       []byte            `json:"-"`
	XXX_sizecache          int32             `json:"-"`
}

func (m *RoomInfo) Reset()         { *m = RoomInfo{} }
func (m *RoomInfo) String() string { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()    {}
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{4}
}
func (m *RoomInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomInfo.Unmarshal(m, b)
}
func (m *RoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomInfo.Marshal(b, m, deterministic)
}
func (dst *RoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomInfo.Merge(dst, src)
}
func (m *RoomInfo) XXX_Size() int {
	return xxx_messageInfo_RoomInfo.Size(m)
}
func (m *RoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomInfo proto.InternalMessageInfo

func (m *RoomInfo) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *RoomInfo) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *RoomInfo) GetNumberOfTeams() int32 {
	if m != nil {
		return m.NumberOfTeams
	}
	return 0
}

func (m *RoomInfo) GetPlayersPerTeam() int32 {
	if m != nil {
		return m.PlayersPerTeam
	}
	return 0
}

func (m *RoomInfo) GetMinimumNumberOfPlayers() int32 {
	if m != nil {
		return m.MinimumNumberOfPlayers
	}
	return 0
}

func (m *RoomInfo) GetMatchmakingScript() string {
	if m != nil {
		return m.MatchmakingScript
	}
	return ""
}

func (m *RoomInfo) GetWebhookUrl() string {
	if m != nil {
		return m.WebhookUrl
	}
	return ""
}

func (m *RoomInfo) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RoomInfo) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_2ef824513f6c7d2c, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RoomEvent)(nil), "eventforwarder.RoomEvent")
	proto.RegisterMapType((map[string]string)(nil), "eventforwarder.RoomEvent.MetadataEntry")
	proto.RegisterType((*RoomStatus)(nil), "eventforwarder.RoomStatus")
	proto.RegisterType((*Room)(nil), "eventforwarder.Room")
	proto.RegisterMapType((map[string]string)(nil), "eventforwarder.Room.MetadataEntry")
	proto.RegisterType((*PlayerEvent)(nil), "eventforwarder.PlayerEvent")
	proto.RegisterMapType((map[string]string)(nil), "eventforwarder.PlayerEvent.MetadataEntry")
	proto.RegisterType((*RoomInfo)(nil), "eventforwarder.RoomInfo")
	proto.RegisterMapType((map[string]string)(nil), "eventforwarder.RoomInfo.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "eventforwarder.RoomInfo.TagsEntry")
	proto.RegisterType((*Response)(nil), "eventforwarder.Response")
	proto.RegisterEnum("eventforwarder.RoomStatus_RoomStatusType", RoomStatus_RoomStatusType_name, RoomStatus_RoomStatusType_value)
	proto.RegisterEnum("eventforwarder.PlayerEvent_PlayerEventType", PlayerEvent_PlayerEventType_name, PlayerEvent_PlayerEventType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GRPCForwarderClient is the client API for GRPCForwarder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCForwarderClient interface {
	SendRoomInfo(ctx context.Context, in *RoomInfo, opts ...grpc.CallOption) (*Response, error)
	SendRoomStatus(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error)
	SendRoomPing(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error)
	SendRoomEvent(ctx context.Context, in *RoomEvent, opts ...grpc.CallOption) (*Response, error)
	SendPlayerEvent(ctx context.Context, in *PlayerEvent, opts ...grpc.CallOption) (*Response, error)
}

type gRPCForwarderClient struct {
	cc *grpc.ClientConn
}

func NewGRPCForwarderClient(cc *grpc.ClientConn) GRPCForwarderClient {
	return &gRPCForwarderClient{cc}
}

func (c *gRPCForwarderClient) SendRoomInfo(ctx context.Context, in *RoomInfo, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendRoomInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCForwarderClient) SendRoomStatus(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendRoomStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCForwarderClient) SendRoomPing(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendRoomPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCForwarderClient) SendRoomEvent(ctx context.Context, in *RoomEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendRoomEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCForwarderClient) SendPlayerEvent(ctx context.Context, in *PlayerEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendPlayerEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GRPCForwarderServer is the server API for GRPCForwarder service.
type GRPCForwarderServer interface {
	SendRoomInfo(context.Context, *RoomInfo) (*Response, error)
	SendRoomStatus(context.Context, *RoomStatus) (*Response, error)
	SendRoomPing(context.Context, *RoomStatus) (*Response, error)
	SendRoomEvent(context.Context, *RoomEvent) (*Response, error)
	SendPlayerEvent(context.Context, *PlayerEvent) (*Response, error)
}

func RegisterGRPCForwarderServer(s *grpc.Server, srv GRPCForwarderServer) {
	s.RegisterService(&_GRPCForwarder_serviceDesc, srv)
}

func _GRPCForwarder_SendRoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendRoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendRoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendRoomInfo(ctx, req.(*RoomInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCForwarder_SendRoomStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendRoomStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendRoomStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendRoomStatus(ctx, req.(*RoomStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCForwarder_SendRoomPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendRoomPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendRoomPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendRoomPing(ctx, req.(*RoomStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCForwarder_SendRoomEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendRoomEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendRoomEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendRoomEvent(ctx, req.(*RoomEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCForwarder_SendPlayerEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendPlayerEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendPlayerEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendPlayerEvent(ctx, req.(*PlayerEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPCForwarder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventforwarder.GRPCForwarder",
	HandlerType: (*GRPCForwarderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRoomInfo",
			Handler:    _GRPCForwarder_SendRoomInfo_Handler,
		},
		{
			MethodName: "SendRoomStatus",
			Handler:    _GRPCForwarder_SendRoomStatus_Handler,
		},
		{
			MethodName: "SendRoomPing",
			Handler:    _GRPCForwarder_SendRoomPing_Handler,
		},
		{
			MethodName: "SendRoomEvent",
			Handler:    _GRPCForwarder_SendRoomEvent_Handler,
		},
		{
			MethodName: "SendPlayerEvent",
			Handler:    _GRPCForwarder_SendPlayerEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "events.proto",
}

func init() { proto.RegisterFile("events.proto", fileDescriptor_events_2ef824513f6c7d2c) }

var fileDescriptor_events_2ef824513f6c7d2c = []byte{
	// 710 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4f, 0x4f, 0xdb, 0x4e,
	0x10, 0xc5, 0x89, 0x1d, 0xec, 0x09, 0x09, 0x66, 0x85, 0x90, 0x7f, 0xf9, 0x55, 0x55, 0x64, 0x55,
	0x34, 0xa8, 0x55, 0x0e, 0xa9, 0x4a, 0x51, 0x2b, 0x55, 0x6a, 0x21, 0xb4, 0x41, 0x14, 0x22, 0x93,
	0x1e, 0x7a, 0xaa, 0x96, 0x78, 0x31, 0x16, 0xd8, 0x6b, 0xad, 0x37, 0xa0, 0xdc, 0xfa, 0x05, 0x7b,
	0xec, 0xa1, 0x9f, 0xa3, 0xc7, 0x5e, 0xaa, 0x5d, 0xff, 0xc1, 0x81, 0x38, 0x2a, 0x42, 0xbd, 0xcd,
	0xcc, 0xce, 0xbc, 0x9d, 0x99, 0xf7, 0xbc, 0x86, 0x15, 0x72, 0x45, 0x42, 0x1e, 0x77, 0x23, 0x46,
	0x39, 0x45, 0x4d, 0xe9, 0x9d, 0x51, 0x76, 0x8d, 0x99, 0x4b, 0x98, 0xfd, 0x43, 0x01, 0xc3, 0xa1,
	0x34, 0xe8, 0x8b, 0x30, 0xea, 0x80, 0xca, 0x28, 0x0d, 0x2c, 0xa5, 0xad, 0x74, 0xea, 0xbd, 0xf5,
	0xee, 0x6c, 0x72, 0x57, 0x24, 0x3a, 0x32, 0x03, 0x3d, 0x02, 0x43, 0x1e, 0x8e, 0xa6, 0x11, 0xb1,
	0x2a, 0x6d, 0xa5, 0x63, 0x38, 0x37, 0x01, 0xb4, 0x0b, 0x7a, 0x40, 0x38, 0x76, 0x31, 0xc7, 0x56,
	0xb5, 0x5d, 0xed, 0xd4, 0x7b, 0x4f, 0xe7, 0x61, 0xc9, 0x4b, 0xbb, 0x9f, 0xd2, 0xcc, 0x7e, 0xc8,
	0xd9, 0xd4, 0xc9, 0x0b, 0x5b, 0x6f, 0xa0, 0x31, 0x73, 0x84, 0x4c, 0xa8, 0x5e, 0x90, 0xa9, 0x6c,
	0xce, 0x70, 0x84, 0x89, 0xd6, 0x41, 0xbb, 0xc2, 0x97, 0x93, 0xac, 0x83, 0xc4, 0x79, 0x5d, 0xd9,
	0x51, 0xec, 0xef, 0x0a, 0x80, 0xb8, 0xe2, 0x84, 0x63, 0x3e, 0x89, 0xef, 0x31, 0xd8, 0x00, 0x20,
	0x96, 0x35, 0xf9, 0x64, 0xcd, 0xde, 0xd6, 0xbc, 0xfc, 0x04, 0xb9, 0x60, 0x8a, 0x02, 0xa7, 0x50,
	0x6c, 0x1f, 0x40, 0x73, 0xf6, 0x14, 0x19, 0xa0, 0x31, 0x82, 0xdd, 0xa9, 0xb9, 0x84, 0x56, 0x40,
	0xa7, 0xe3, 0xf1, 0x24, 0xf2, 0x89, 0x6b, 0x2a, 0x68, 0x15, 0xea, 0x9c, 0xb0, 0xc0, 0x0f, 0x31,
	0xf7, 0x43, 0xcf, 0xac, 0xa0, 0x26, 0x40, 0x16, 0x20, 0xae, 0x59, 0xb5, 0x7f, 0x29, 0xa0, 0x0a,
	0x30, 0x84, 0x40, 0xf5, 0x70, 0x40, 0xd2, 0x2d, 0x48, 0x1b, 0x6d, 0x40, 0x4d, 0xf4, 0x3e, 0x70,
	0xd3, 0x3d, 0xa4, 0x9e, 0xc8, 0x3d, 0xa7, 0x31, 0xb7, 0xd4, 0x24, 0x57, 0xd8, 0x22, 0x16, 0x51,
	0xc6, 0x2d, 0xad, 0xad, 0x74, 0x34, 0x47, 0xda, 0xe8, 0x6d, 0x81, 0xae, 0x9a, 0xa4, 0xcb, 0x9e,
	0x37, 0x71, 0x19, 0x53, 0xa8, 0x05, 0xba, 0xb8, 0x51, 0x6e, 0x6c, 0x59, 0xde, 0x95, 0xfb, 0x0f,
	0x63, 0xf1, 0x67, 0x05, 0xea, 0xc3, 0x4b, 0x3c, 0x25, 0x2c, 0xd1, 0x67, 0x0b, 0xf4, 0x48, 0xba,
	0x03, 0x37, 0x05, 0xc8, 0xfd, 0x9c, 0xe2, 0xca, 0x5f, 0x50, 0x5c, 0xd0, 0x6e, 0x55, 0x32, 0xfc,
	0xec, 0x76, 0x7a, 0xe1, 0xd6, 0xa2, 0x2d, 0x39, 0x2e, 0x08, 0xbd, 0x5f, 0xd8, 0x9c, 0x2a, 0x37,
	0xb7, 0xb5, 0x08, 0xe9, 0x9f, 0x48, 0xfd, 0x25, 0xac, 0xde, 0xea, 0x10, 0xad, 0x41, 0x63, 0x78,
	0xf8, 0xee, 0x4b, 0xdf, 0xf9, 0x7a, 0x70, 0x3c, 0x38, 0xea, 0xef, 0x99, 0x4b, 0x42, 0x61, 0x69,
	0xe8, 0xb0, 0xbf, 0x3f, 0x32, 0x15, 0xfb, 0x9b, 0x0a, 0xba, 0x58, 0xca, 0x20, 0x3c, 0xa3, 0x33,
	0x0c, 0x2a, 0xb3, 0x0c, 0xe6, 0x8a, 0xab, 0x14, 0x14, 0xf7, 0x04, 0x1a, 0xe1, 0x24, 0x38, 0x25,
	0xec, 0xf8, 0x6c, 0x44, 0x70, 0x10, 0xcb, 0x35, 0x6a, 0xce, 0x6c, 0x10, 0x6d, 0x42, 0x33, 0xa1,
	0x27, 0x1e, 0x12, 0x26, 0x42, 0x52, 0x89, 0x9a, 0x73, 0x2b, 0x8a, 0xb6, 0x61, 0x23, 0xf0, 0x43,
	0x3f, 0x98, 0x04, 0x47, 0x69, 0x7d, 0x32, 0x50, 0x9c, 0xaa, 0xb4, 0xe4, 0x14, 0x3d, 0x87, 0xb5,
	0x00, 0xf3, 0xf1, 0x79, 0x80, 0x2f, 0xfc, 0xd0, 0x3b, 0x19, 0x33, 0x3f, 0xe2, 0x56, 0x4d, 0xb6,
	0x79, 0xf7, 0x00, 0x3d, 0x06, 0xb8, 0x26, 0xa7, 0xe7, 0x94, 0x5e, 0x7c, 0x66, 0x97, 0xa9, 0x4e,
	0x0b, 0x11, 0xf4, 0xbe, 0xc0, 0xa5, 0x2e, 0xb9, 0xdc, 0x9c, 0x27, 0x22, 0xb1, 0xaf, 0xd2, 0x2f,
	0x61, 0x1b, 0x54, 0x8e, 0xbd, 0xd8, 0x32, 0xca, 0xbf, 0x22, 0x59, 0x3f, 0xc2, 0x5e, 0x9c, 0xd4,
	0xca, 0xfc, 0x07, 0x09, 0xa0, 0xf5, 0x0a, 0x8c, 0x1c, 0xef, 0x5e, 0xca, 0xd9, 0x01, 0xdd, 0x21,
	0x71, 0x44, 0xc3, 0x58, 0xb2, 0x3c, 0xa6, 0x6e, 0xc2, 0xbe, 0xe6, 0x48, 0x1b, 0x59, 0xb0, 0x1c,
	0x90, 0x38, 0xc6, 0x5e, 0x56, 0x9b, 0xb9, 0xbd, 0xdf, 0x15, 0x68, 0x7c, 0x70, 0x86, 0xbb, 0xfb,
	0xd9, 0x68, 0x68, 0x0f, 0x56, 0x4e, 0x48, 0xe8, 0xe6, 0x8a, 0xb2, 0xca, 0x66, 0x6f, 0xdd, 0x3d,
	0x49, 0x7b, 0xb0, 0x97, 0xd0, 0x47, 0x68, 0x66, 0x28, 0xe9, 0xcb, 0xdd, 0x2a, 0x7f, 0x7b, 0x17,
	0x22, 0xed, 0xdf, 0xf4, 0x33, 0xf4, 0x43, 0xef, 0x01, 0x38, 0x8d, 0x0c, 0x27, 0x79, 0x83, 0xfe,
	0x2b, 0xfd, 0x93, 0x2d, 0xc4, 0x39, 0x80, 0x55, 0x81, 0x53, 0x7c, 0xcd, 0xfe, 0x5f, 0xf0, 0x54,
	0x2c, 0xc2, 0x3a, 0xad, 0xc9, 0x7f, 0xf9, 0x8b, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0xb7,
	0x82, 0x5e, 0xdb, 0x07, 0x00, 0x00,
}
